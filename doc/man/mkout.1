.\" Generated by mkdoc on Mon Apr 18 2016 12:29:49 GMT+0800 (WITA)
.TH "MKOUT" "1" "April, 2016" "mkout 1.0.34" "User Commands"
.de nl
.sp 0
..
.de hr
.sp 1
.nf
.ce
.in 4
\l’80’
.fi
..
.de h1
.RE
.sp 1
\fB\\$1\fR
.RS 4
..
.de h2
.RE
.sp 1
.in 4
\fB\\$1\fR
.RS 6
..
.de h3
.RE
.sp 1
.in 6
\fB\\$1\fR
.RS 8
..
.de h4
.RE
.sp 1
.in 8
\fB\\$1\fR
.RS 10
..
.de h5
.RE
.sp 1
.in 10
\fB\\$1\fR
.RS 12
..
.de h6
.RE
.sp 1
.in 12
\fB\\$1\fR
.RS 14
..
.h1 "NAME"
.P
mkout \- render to various output formats
.nl
.h1 "SYNOPSIS"
.PP
.in 10
[options]
.h1 "OPTIONS"
.BL
.IP "\[ci]" 4
\fB\-o, \-\-output=[FILE]\fR Write output to FILE
.nl
.IP "\[ci]" 4
\fB\-H, \-\-html\fR Set output renderer to HTML
.nl
.IP "\[ci]" 4
\fB\-j, \-\-json\fR Set output renderer to JSON
.nl
.IP "\[ci]" 4
\fB\-m, \-\-man\fR Set output renderer to MAN
.nl
.IP "\[ci]" 4
\fB\-t, \-\-text\fR Set output renderer to TEXT
.nl
.IP "\[ci]" 4
\fB\-x, \-\-xml\fR Set output renderer to XML
.nl
.IP "\[ci]" 4
\fB\-y, \-\-yaml\fR Set output renderer to YAML
.nl
.IP "\[ci]" 4
\fB\-Y, \-\-yaml\-full\fR Do not compact YAML output
.nl
.IP "\[ci]" 4
\fB\-n, \-\-noop\fR Pass through input JSON
.nl
.IP "\[ci]" 4
\fB\-h, \-\-help\fR Display help and exit
.nl
.IP "\[ci]" 4
\fB\-\-version\fR Print the version and exit
.nl
.EL
.h1 "EXAMPLE"
.P
Print as markdown:
.nl
.PP
.in 10
mkcat README.md | mkout
.br

.P
Print as HTML:
.nl
.PP
.in 10
mkcat README.md | mkout \-\-html
.br

.P
Print as XML:
.nl
.PP
.in 10
mkcat README.md | mkout \-\-xml
.br

.P
Print as plain text:
.nl
.PP
.in 10
mkcat README.md | mkout \-\-text
.br

.P
YAML is particularly useful to get a compact view of the tree:
.nl
.PP
.in 10
mkcat README.md | mkout \-y
.br

.P
For more detailed YAML use:
.nl
.PP
.in 10
mkcat README.md | mkout \-Y
.br

.P
Print as JSON:
.nl
.PP
.in 10
mkcat README.md | mkout \-j
.br

.P
Pass through the input newline\-delimited JSON:
.nl
.PP
.in 10
mkcat README.md | mkout \-\-noop
.br

.h1 "SEE ALSO"
.P
mkhtml(1), mkman(1), mktext(1)
.nl